/*
 * OidcProvider
 *
 * This a service contract for the OidcProvider in Balsam.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using OidcProvider.Attributes;
using OidcProvider.Models;

namespace OidcProvider.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class RoleApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Adds a user to the role</remarks>
        /// <param name="roleId">The id for the repository</param>
        /// <param name="addUserToRoleRequest">Definition of the user to add to the role</param>
        /// <response code="200">Success</response>
        /// <response code="400">Error respsone for 400</response>
        [HttpPost]
        [Route("/api/v1/roles/{roleId}/users")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("AddUserToRole")]
        [SwaggerResponse(statusCode: 400, type: typeof(Problem), description: "Error respsone for 400")]
        public abstract IActionResult AddUserToRole([FromRoute (Name = "roleId")][Required]string roleId, [FromBody]AddUserToRoleRequest? addUserToRoleRequest);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Creates a new role</remarks>
        /// <param name="createRoleRequest">Definition of a new role</param>
        /// <response code="200">Success</response>
        /// <response code="400">Error respsone for 400</response>
        [HttpPost]
        [Route("/api/v1/roles")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CreateRole")]
        [SwaggerResponse(statusCode: 200, type: typeof(RoleCreatedResponse), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Problem), description: "Error respsone for 400")]
        public abstract Task<IActionResult> CreateRole([FromBody] CreateRoleRequest? createRoleRequest);
    }
}

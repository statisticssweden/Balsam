openapi: '3.0.2'
info:
  title: S3Provider
  version: '2.0'
  description: This a service contract for the OicdProvider in Balsam.

servers:
  - url: http://s3-provider.balsam-system.svc.cluster.local/api/v1

tags:
  - name: Bucket
    description:  Buckets methods

paths:
  /buckets:
    post:
      tags: 
        - Bucket
      operationId: CreateBucket
      description: Creates a new Bucket
      requestBody:
        description: Definition of a new role
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBucketRequest'  
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketCreatedResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse400'

  /buckets/{bucketId}:
    delete:
      tags: 
        - Bucket
      operationId: DeleteBucket
      description: Deletes a new Bucket      
      parameters:
        - name: bucketId
          in: path
          description: the name of the bucket
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success          
        '400':
          $ref: '#/components/responses/ErrorResponse400'

  /buckets/{bucketId}/folder:
    post:
      tags: 
        - Bucket
      operationId: CreateFolder
      description: Creates a new virtual folder in the bucket.
      requestBody:
        description: Definition of a new role
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFolderRequest'  
      parameters:
        - name: bucketId
          in: path
          description: the name of the bucket
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderCreatedResponse'
                 
        '400':
          $ref: '#/components/responses/ErrorResponse400'

  /buckets/{bucketId}/folder/{folderName}:
    delete:
      tags: 
        - Bucket
      operationId: DeleteFolder
      description: Deletes a new virtual folder in the bucket.
      parameters:
        - name: bucketId
          in: path
          description: the name of the bucket
          required: true
          schema:
            type: string
        - name: folderName
          in: path
          description: the name of the folder
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success                 
        '400':
          $ref: '#/components/responses/ErrorResponse400'

  /buckets/{bucketId}/acceskey:
    post:
      tags: 
        - Bucket
      operationId: CreateAccessKey
      description: Creates a new acces key for the bucket.
      parameters:
        - name: bucketId
          in: path
          description: the name of the bucket
          required: true
          schema:
            type: string      
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKeyCreatedResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse400'
  
    
components:
  schemas:
    CreateBucketRequest:
      type: object
      description: Bucket name
      required:
        - "name"
        - "policyName"
      properties:
        name:
          type: string
          description: The name of the bucket
        policyName:
          type: string
          description: name of the s3 policy name should match the group name in Oidc provider

    CreateFolderRequest:
      type: object
      description: Folder name
      required:
        - "name"
      properties:
        name:
          type: string
          description: The name of the folder

    BucketCreatedResponse:
      type: object
      description: Bucket description
      required:
        - "requestedName"
        - "name"
      properties:
        requestedName:
          type: string
          description: The requested name of the bucket
        name:
          type: string
          description: The name of the bucket

    FolderCreatedResponse:
      type: object
      description: Folder created description
      required:
        - "requestedName"
        - "name"
      properties:
        requestedName:
          type: string
          description: The requested name of the virtual folder
        name:
          type: string
          description: The name of the virtual folder


    AccessKeyCreatedResponse:
      type: object
      description: Access key created description
      required:
        - "accessKey"
        - "secretKey"
      properties:
        accessKey:
          type: string
          description: The access key
        secretKey:
          type: string
          description: The secret key

    Problem:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://zalando.github.io/problem/constraint-violation
        title:
          type: string
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the
            problem.
          example: Connection to database timed out
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
                  
  responses:
    ErrorResponse400:
      description: Error respsone for 400
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            title: Bad Request
            status: 400
            detail: Generic error
 
openapi: '3.0.2'
info:
  title: GitProvider
  version: '2.0'
  description: This a service contract for the GitProvider in Balsam.

servers:
  - url: http://git-provider.balsam-system.svc.cluster.local/api/v1

tags:
  - name: Repository
    description:  Repository methods
  - name: User
    description:  User methods

paths:
  /repos:
    post:
      tags: 
        - Repository
      operationId: CreateRepo
      description: Creates a new repository
      parameters:
        - name: preferredName
          in: query
          description: The preferred name of the repository
          required: true
          schema:
            type: string  
        - name: defaultBranchName
          in: query
          description: The default branch name
          required: true
          schema:
            type: string  
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryCreatedResponse'
              
              example: 
                  preferedName: Demo repot
                  name: demo-repot
                  path: https://mygit.local/demo-repot.git
                
                 
        '400':
          $ref: '#/components/responses/ErrorResponse400'

  /repos/{repository}/branches:
    post:
      tags: 
        - Repository
      operationId: CreateBranch
      description: Create a branch from main branch in a existing repository
      parameters:
        - name: repository
          in: path
          description: The name of the repository where the branch should be created.
          required: true
          schema:
            type: string
        - name: preferredName
          in: query
          description: The preferred name of the branch.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchCreatedResponse'

                example: |
                  repository: demo-repot
                  preferedName: Demo repot
                  name: demo-repot
        '400':
          $ref: '#/components/responses/ErrorResponse400NoRepo'    

  /users/{id}/PAT:
    post:
      tags: 
        - User
      operationId: CreatePAT
      description: Creates a personal access token for the user.
      parameters:
        - name: id
          in: path
          description: The user identifier.
          required: true
          schema:
            type: string
   
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPATCreatedResponse'

                example: |
                  name: olle-path
                  token: XSscsdsaADCaasdddddfv
        '400':
          $ref: '#/components/responses/ErrorResponse400'        
    
components:
  schemas:
    RepositoryCreatedResponse:
      type: object
      description: Repository description
      required:
        - "id"
        - "preferredName"
        - "name"
        - "path"
      properties:
        id:
          type: string
          description: The identity of the repository
        preferredName:
          type: string
          description: The preferred name for the repository
        name:
          type: string
          description: The name of the repository
        path:
          type: string
          description: The path to the repository that can be used for clone it.

    BranchCreatedResponse:
      type: object
      description: Branch created description
      required:
        - "repository"
        - "preferredName"
        - "name"
      properties:
        repository:
          type: string
          description: The name of the repository.
        preferredName:
          type: string
          description: The preferred name for the branch
        name:
          type: string
          description: The name of the branch

    UserPATCreatedResponse:
      type: object
      description: A PAT description
      required:
        - "token"
      properties:
        name:
          type: string
          description: The name of the token.
          nullable: true
        token:
          type: string
          description: The token that was created.

    Problem:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://zalando.github.io/problem/constraint-violation
        title:
          type: string
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the
            problem.
          example: Connection to database timed out
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
                  
  responses:
    ErrorResponse400NoRepo:
      description: Error respsone for 400
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            title: Bad Request
            status: 400
            detail: No such repository
    
    ErrorResponse400:
      description: Error respsone for 400
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            title: Bad Request
            status: 400
            detail: Generic error
 
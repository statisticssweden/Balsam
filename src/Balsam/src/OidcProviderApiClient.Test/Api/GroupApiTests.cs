/*
 * OidcProvider
 *
 * This a service contract for the OidcProvider in Balsam.
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using OidcProviderApiClient.Client;
using OidcProviderApiClient.Api;
// uncomment below to import models
//using OidcProviderApiClient.Model;

namespace OidcProviderApiClient.Test.Api
{
    /// <summary>
    ///  Class for testing GroupApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class GroupApiTests : IDisposable
    {
        private GroupApi instance;

        public GroupApiTests()
        {
            instance = new GroupApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GroupApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' GroupApi
            //Assert.IsType<GroupApi>(instance);
        }

        /// <summary>
        /// Test AddUserToGroup
        /// </summary>
        [Fact]
        public void AddUserToGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string groupId = null;
            //AddUserToGroupRequest? addUserToGroupRequest = null;
            //instance.AddUserToGroup(groupId, addUserToGroupRequest);
        }

        /// <summary>
        /// Test CreateGroup
        /// </summary>
        [Fact]
        public void CreateGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateGroupRequest? createGroupRequest = null;
            //var response = instance.CreateGroup(createGroupRequest);
            //Assert.IsType<GroupCreatedResponse>(response);
        }
    }
}

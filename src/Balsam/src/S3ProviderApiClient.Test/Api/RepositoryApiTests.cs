/*
 * GitProvider
 *
 * This a service contract for the GitProvider in Balsam.
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using S3ProviderApiClient.Client;
using S3ProviderApiClient.Api;
// uncomment below to import models
//using S3ProviderApiClient.Model;

namespace S3ProviderApiClient.Test.Api
{
    /// <summary>
    ///  Class for testing RepositoryApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class RepositoryApiTests : IDisposable
    {
        private RepositoryApi instance;

        public RepositoryApiTests()
        {
            instance = new RepositoryApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RepositoryApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' RepositoryApi
            //Assert.IsType<RepositoryApi>(instance);
        }

        /// <summary>
        /// Test CreateBranch
        /// </summary>
        [Fact]
        public void CreateBranchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string repositoryId = null;
            //CreateBranchRequest? createBranchRequest = null;
            //var response = instance.CreateBranch(repositoryId, createBranchRequest);
            //Assert.IsType<BranchCreatedResponse>(response);
        }

        /// <summary>
        /// Test CreateRepository
        /// </summary>
        [Fact]
        public void CreateRepositoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateRepositoryRequest? createRepositoryRequest = null;
            //var response = instance.CreateRepository(createRepositoryRequest);
            //Assert.IsType<RepositoryCreatedResponse>(response);
        }
    }
}
